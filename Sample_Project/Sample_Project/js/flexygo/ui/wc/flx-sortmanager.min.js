var flexygo;!function(flexygo){var ui_1;ui_1=flexygo.ui||(flexygo.ui={}),(ui_1.wc||(ui_1.wc={})).FlxSortManagerElement=class extends HTMLElement{constructor(){super(),this.sorting=!1,this.sortingFrom=null}connectedCallback(){}init(module){this.module=module,this.list=module.find("flx-list")[0],this.list.data.length>0&&(this.fields=Object.keys(this.list.data[0]).sort()),this.render()}refresh(){this.render()}clean(){let me=$(this),orderInfo=new Array;this.list.sortByObj(orderInfo),me.closest(".ui-dialog").find(".ui-dialog-titlebar-close").click()}apply(){let me=$(this),orderInfo=new Array;me.find(".used li").each((i,el)=>{let itm=$(el),ord=new flexygo.api.list.PropertyOrder;ord.Asc=itm.is(".asc"),ord.ObjectName=this.list.objectname,ord.PropertyName=itm.attr("property"),orderInfo.push(ord)}),this.list.sortByObj(orderInfo),me.closest(".ui-dialog").find(".ui-dialog-titlebar-close").click()}render(){let me=$(this);me.html('\n                <div class="col-6 padding-l" style="padding-bottom:0px">\n                    <div class="box">\n                        <span class="textLabel">Fields</span>\n                        <div class="sortContainer">\n                            <ul class="fields unused"></ul>\n                        </div>\n                    </div>\n                </div>\n                <div class="col-6 padding-l" style="padding-bottom:0px">\n                    <div class="box">\n                        <span class="textLabel">Sort</span>\n                        <div class="sortContainer">\n                            <ul class="fields used"></ul>\n                        </div>\n                    </div>\n                </div>\n            ');let ul=me.find(".unused");for(var i=0;i<this.fields.length;i++)"_objectname"!=this.fields[i].toLowerCase()&&"_objectwhere"!=this.fields[i].toLowerCase()&&"_ot"!=this.fields[i].toLowerCase()&&"_guid"!=this.fields[i].toLowerCase()&&ul.append('<li class="fieldSortItem asc" property="'+this.fields[i]+'"><i style="border-radius:50%" class="sortIcon fa fa-arrows" /> '+this.fields[i]+'<i class="delbutton fa fa-close pull-right" style="display:none"/> </li>');if(me.find(".fieldSortItem").on("click",ev=>{let itm=$(ev.currentTarget);itm.closest("ul").is(".unused")?(itm.find("i.sortIcon").removeClass("fa fa-arrows"),itm.find("i.fa-close").show(),me.find(".used").append(itm)):itm.toggleClass("asc dsc")}),me.find(".delbutton").on("click",ev=>{let itm=$(ev.currentTarget).closest("li[property]");itm.find("i.fa-close").hide(),itm.find("i.sortIcon").addClass("fa fa-arrows"),itm.detach(),me.find(".unused").append(itm),ev.stopPropagation(),ev.preventDefault()}),me.find(".fields").sortable({connectWith:".fields",appendTo:document.body,helper:"clone",start:(event,ui)=>{this.sortStart(ui.item)},stop:(event,ui)=>{this.sortStop(ui.item)}}).disableSelection(),this.list.orderObj&&this.list.orderObj.length>0)for(let i=0;i<this.list.orderObj.length;i++){let col=this.list.orderObj[i],field=me.find(".unused [property]").filter(function(){return $(this).attr("property").toLowerCase()==col.PropertyName.toLowerCase()});field.length>0&&(col.Asc||field.toggleClass("asc dsc"),me.find(".used").append(field))}}sortStart(item){this.sortingFrom=item.closest("ul"),this.sorting=!0}sortStop(item){let col=item.closest("ul");col.is(this.sortingFrom)||(col.is(".used")?(item.find("i.sortIcon").removeClass("fa fa-arrows"),item.find("i.fa-close").show()):(item.find("i.sortIcon").addClass("fa fa-arrows"),item.find("i.fa-close").hide())),this.sortingFrom=null,this.sorting=!1}}}(flexygo||(flexygo={})),window.customElements.define("flx-sortmanager",flexygo.ui.wc.FlxSortManagerElement);